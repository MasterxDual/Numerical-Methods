# ==============================
# ðŸ“˜ Comparison: Convergence Method with Euler
# ==============================

import numpy as np
import matplotlib.pyplot as plt

# --- Read data from results.txt (generated by C code) ---
data1 = np.loadtxt('convergence_rk4_edo4_1.txt')
data2 = np.loadtxt('convergence_rk4_edo4_2.txt')
data3 = np.loadtxt('convergence_rk4_edo4_3.txt')
data4 = np.loadtxt('convergence_rk4_edo4_4.txt')

x_convergence1 = data1[:, 0]
y_convergence1 = data1[:, 1]
x_convergence2 = data2[:, 0]
y_convergence2 = data2[:, 1]
x_convergence3 = data3[:, 0]
y_convergence3 = data3[:, 1]
x_convergence4 = data4[:, 0]
y_convergence4 = data4[:, 1]

# --- Exclude the first point (index 0) ---
x_convergence1 = x_convergence1[1:]
y_convergence1 = y_convergence1[1:]
x_convergence2 = x_convergence2[1:]
y_convergence2 = y_convergence2[1:]
x_convergence3 = x_convergence3[1:]
y_convergence3 = y_convergence3[1:]
x_convergence4 = x_convergence4[1:]
y_convergence4 = y_convergence4[1:]

# --- Plot both curves ---
plt.figure(figsize=(8, 6))

# RK 4 method points
plt.plot(x_convergence1, y_convergence1, 'ro-', label="RK 4 Method 1", markersize=5)
plt.plot(x_convergence2, y_convergence2, 'bo-', label="RK 4 Method 2", markersize=5)
plt.plot(x_convergence3, y_convergence3, 'go-', label="RK 4 Method 3", markersize=5)
plt.plot(x_convergence4, y_convergence4, 'yo-', label="RK 4 Method 4", markersize=5)

# --- Graph formatting ---
plt.title("Convergence factor (RK 4 Method)", fontsize=13)
plt.xlabel("x", fontsize=12)
plt.ylabel("Convergence Factor Q1[i] Q2[i] Q3[i] and Q4[i]", fontsize=12)
plt.legend()
plt.grid(True)

# Axis limits slightly extended
plt.xlim(min(x_convergence1) - 0.5, max(x_convergence1) + 0.5)
plt.ylim(min(y_convergence1) - 0.5, max(y_convergence1) + 0.5)

# Show plot
plt.show()

"""
https://matplotlib.org/stable/api/markers_api.html ---> Different types of points
https://matplotlib.org/stable/gallery/color/named_colors.html ----> Colors
https://matplotlib.org/stable/api/_as_gen/matplotlib.lines.Line2D.html#matplotlib.lines.Line2D.set_linestyle --> Line styles
"""