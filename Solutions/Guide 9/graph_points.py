# ==============================
# ðŸ“˜ Comparison: Euler vs Exact Solution
# ==============================

import numpy as np
import matplotlib.pyplot as plt

# --- Read data from results.txt (generated by C code) ---
data = np.loadtxt('results.txt')  # Each row: X[i]    Y[i]

x_euler = data[:, 0]
y_euler = data[:, 1]

# --- Compute the exact analytical solution y(x) = (2/3) * x^(3/2) ---
x_exact = np.linspace(min(x_euler), max(x_euler), 200)  # 200 points for smooth curve
y_exact = 1.0 / (x_exact * x_exact + 1.0)

# --- Plot both curves ---
plt.figure(figsize=(8, 6))

# Euler method points
plt.plot(x_euler, y_euler, 'ro-', label="Euler Method", markersize=5)

# Exact solution curve
plt.plot(x_exact, y_exact, 'b-', label="Exact Solution", linewidth=2)

# --- Graph formatting ---
plt.title("Comparison between Euler's Method and Exact Solution", fontsize=13)
plt.xlabel("x", fontsize=12)
plt.ylabel("y(x)", fontsize=12)
plt.legend()
plt.grid(True)

# Axis limits slightly extended
plt.xlim(min(x_euler) - 0.5, max(x_euler) + 0.5)
plt.ylim(min(y_euler) - 0.5, max(y_exact) + 0.5)
""" 
If you want to graph using exact solution data limits, uncomment below:
plt.xlim(min(x_exact)-0.1, max(x_exact)+0.1)
plt.ylim(min(y_exact)-0.1, max(y_exact)+0.1)
"""

# Show plot
plt.show()

"""
https://matplotlib.org/stable/api/markers_api.html ---> Different types of points
https://matplotlib.org/stable/gallery/color/named_colors.html ----> Colors
https://matplotlib.org/stable/api/_as_gen/matplotlib.lines.Line2D.html#matplotlib.lines.Line2D.set_linestyle --> Line styles
"""